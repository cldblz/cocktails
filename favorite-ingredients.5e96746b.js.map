{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,gH,MCAzDC,EAAiB,IAAAC,IAAoBL,EAAA,SAAAM,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCA5F,MAAMC,EAAW,+CAqDRC,eAAeC,EAAsBC,GAC1C,IACE,MAAMC,QAAiBC,MAAM,GAAGL,iBAAwBG,KAExD,aADoBC,EAASE,M,CAE7B,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,Q,ECzDxB,MAAMC,EAAmBC,SAASC,cAAc,4BAC1CC,EAA2BF,SAASC,cAAc,kCAIlDE,EAAuBH,SAASC,cAAc,8BAE7C,IAAIG,EAA4B,KAIhC,SAASC,IACZN,EAAiBO,UAAUC,OAAO,aAClCR,EAAiBO,UAAUC,OAAO,a,CAKtCL,EAAyBM,iBAAiB,QAASH,GACnDN,EAAiBS,iBAAiB,SAASC,IACnCA,EAAEC,SAAWX,GAGjBM,GAAwB,ICtBEL,SAASC,cAAc,cAC/BO,iBAAiB,SD0BhCnB,eAAoCoB,GACvC,GAAIA,EAAEC,OAAOJ,UAAUK,SAAS,wBAAyB,CACrD,MAAMC,EAAWH,EAAEC,OAAOG,WAAWC,QAAQvB,eAAewB,OACxDC,QAA0B1B,EAAsBsB,GAEtDR,EAA4BY,EAW3B3B,eAAsC4B,GACzC,MAAMC,EAAwBD,EAAKE,YAAY,GAEzCjD,EAAOC,OAAOD,KAAKgD,GAEzB,IAAK,MAAME,KAAOlD,EAEqB,OAA/BgD,EAAsBE,SAAgDC,IAA/BH,EAAsBE,KAC7DF,EAAsBE,GAAO,IAKrC,MACAE,aAAchD,EACdiD,OAAQC,EACRC,WAAYC,EACZC,eAAgBC,EAChBC,cAAetC,EACfuC,QAASC,GACLb,EAGEc,EAAS,iCACWzC,4CACKwC,mKAIIH,osBAiBYJ,wSAWjDxB,SAASC,cAAc,8BAA8Ba,QAAQmB,mBAAqB3D,EAChF6B,EAAqB+B,UAAYF,C,CAlE7BG,CAAuBnB,GACvBX,G,KChCR,MAsBM+B,EAAwBC,IAE5B,MAAMC,EAAgB3D,KAAKC,MAAM2D,aAAaC,QAAQ,iBACtD5C,QAAQC,IAAIyC,GACZ,MAAMG,EAAsBH,EAAcI,oBAC1C,IAAIC,EAAU,GACqB,IAA/BF,EAAoBpE,QAIxBoE,EAAoBG,SAAQC,IAC1BF,GAjCsB,CAACE,IACzB,MAAMC,EAAOD,EAAQE,eAGrB,MAAO,6HAG4BD,gDALnBD,EAAQG,0DAOWF,6RAIVG,EAAApE,qHAMxB,EAcYqE,CAAkBL,EAAQ,IAGvCR,EAAOH,UAAYS,GAPjB3C,SAASC,cAAc,cAAckD,UAAY,gDAOzB,EAa5BnD,SAASQ,iBAAiB,oBATb,KACX,MAAM4C,EAAgBpD,SAASC,cAAc,oBAEzCmD,GACFhB,EAAqBgB,EAAc","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-770a6e9a38504f01.js","node_modules/@parcel/runtime-js/lib/runtime-44e7bd74d9a8b620.js","src/js/fetchFunction.js","src/js/modal-ingredients.js","src/js/favorite-ingredients.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cuUtH\\\":\\\"favorite-ingredients.5e96746b.js\\\",\\\"8OQ7p\\\":\\\"icons.3897eb8e.svg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8OQ7p\")).toString();","const BASE_URL = 'https://www.thecocktaildb.com/api/json/v1/1/';\n\nexport async function fetchDrinksByName(drinkName) {\n  try {\n    const response = await fetch(`${BASE_URL}search.php?s=${drinkName}`);\n    const drinks = await response.json();\n    return drinks;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchDrinkById(drinkId) {\n  try {\n    const response = await fetch(`${BASE_URL}lookup.php?i=${drinkId}`);\n    const drink = await response.json();\n    return drink;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchRandomCocktail() {\n    try {\n      const response = await fetch(`${BASE_URL}random.php`);\n      const drink = await response.json();\n      return drink;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  export async function fetchDrinkByLetter(letter) {\n    try {\n      const response = await fetch(`${BASE_URL}search.php?f=${letter}`);\n      const drink = await response.json();\n      return drink;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  export async function fetchIngredientById(ingredientId) {\n    try {\n      const response = await fetch(`${BASE_URL}lookup.php?iid=${ingredientId}`);\n      const drink = await response.json();\n      return drink;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n\n  export async function fetchIngredientByName(ingredientName) {\n    try {\n      const response = await fetch(`${BASE_URL}search.php?i=${ingredientName}`);\n      const drink = await response.json();\n      return drink;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }","import { fetchIngredientByName } from \"./fetchFunction\";\n\nconst ingredientsModal = document.querySelector('[data-ingredients-modal]')\nconst closeIngredientsModalBtn = document.querySelector('[data-ingredients-modal-close]');\n// const modalIngredientsList = document.querySelector('.cocktail-ingredients-list')\n// console.log(modalIngredientsList);\n\nconst insertModalContainer = document.querySelector('.js-insert-modal-container')\n \nexport let emtyObjectForLocalStorage = null\n\n\n\nexport function toggleIngredientsModal() {\n    ingredientsModal.classList.toggle('is-hidden');\n    ingredientsModal.classList.toggle('modal-open');\n}\n\n\n\ncloseIngredientsModalBtn.addEventListener('click', toggleIngredientsModal);\ningredientsModal.addEventListener('click', e => {\n    if (e.target !== ingredientsModal) {\n        return;\n    }\n    toggleIngredientsModal();\n});\n\n\n\nexport async function openIngredientsModal(e) {\n    if (e.target.classList.contains('js-ingredients-modal')) {\n        const elemName = e.target.parentNode.dataset.ingredientName.trim()\n      const foundedIngredient = await fetchIngredientByName(elemName)\n      \n      emtyObjectForLocalStorage = foundedIngredient\n\n\n        renderIngredientsModal(foundedIngredient);\n        toggleIngredientsModal()\n    }\n}\n\n\n\n\nexport async function renderIngredientsModal(data) {\n    const filteredIngredientObj = data.ingredients[0]\n    // console.log(filteredIngredientObj);\n    const keys = Object.keys(filteredIngredientObj);\n\n    for (const key of keys) {\n\n        if (filteredIngredientObj[key] === null || filteredIngredientObj[key] === undefined) {\n            filteredIngredientObj[key] = '';\n        }\n  }\n  \n    // console.log(filteredIngredientObj);\n    const {\n    idIngredient: id,\n    strABV: alcoVolume,\n    strAlcohol: alcoPresence,\n    strDescription: ingredientDescription,\n    strIngredient: ingredientName,\n    strType: ingredientType,\n    } = filteredIngredientObj\n    \n\n    const markup = `\n     <h2 class=\"drink-name\">${ingredientName}</h2>\n      <h3 class=\"drink-category\">${ingredientType}</h3>\n        <div class=\"drink-category--wrapper\">\n          <div class=\"drink-category--line\"></div>\n        </div>\n        <p class=\"drink-description\">${ingredientDescription}</p>\n  \n        <ul class=\"drink-classification-list\">\n          <li class=\"drink-classification-item\">\n            <p class=\"classification-type classification\">\n             ✶ Type: <span class=\"classification-value\"></span>\n            </p>\n          </li>\n          <li class=\"drink-classification-item\">\n            <p class=\"classification-type classification\">\n              ✶ Country of origin:\n              <span class=\"classification-value n\"></span>\n            </p>\n          </li>\n          <li class=\"drink-classification-item\">\n            <p class=\"classification-type classification\">\n              ✶ Alcohol by volume:\n              <span class=\"classification-value\">${alcoVolume}</span>\n            </p>\n          </li>\n          <li class=\"drink-classification-item\">\n            <p class=\"classification-type classification\">\n              ✶ Flavour:\n              <span class=\"classification-value\"></span>\n            </p>\n          </li>\n        </ul>\n    `\n  document.querySelector('[data-favorite-controller]').dataset.favoriteController = id\n    insertModalContainer.innerHTML = markup\n}\n\n\n\n","import IconHeart from '../images/icons.svg';\nimport { openIngredientsModal } from './modal-ingredients';\n\nconst modalIngredientsListM = document.querySelector('.card-list');\nmodalIngredientsListM.addEventListener('click', openIngredientsModal);\n\n\nconst renderIngredients = (element) => {\n  const name = element.nameIngredient;\n  const details = element.typeIngredient;\n\n  return `\n    <div class=\"cocktail-list__cocktail-item\">\n      <div class='card-item__info'>\n        <p class=\"card-item__name\">${name}</p>\n        <p class=\"card-item__details\">${details}</p>\n        <div data-ingredient-name=\"${name}\" class=\"button-wrap\">\n          <button type=\"button\" class=\"cocktail-item__learn-more js-ingredients-modal\">Learn more</button>\n          <button type=\"button\" class=\"cocktail-item__remove\">Remove\n            <svg class=\"svg\" width=\"21\" height=\"19\">\n              <use href=\"${IconHeart}#icon-heart-filled\"></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  `\n}\n\nconst getRandomIngredients = (htmlEl) => {\n  // Todo: get data\n  const localFavorite = JSON.parse(localStorage.getItem('favoriteList'));\n  console.log(localFavorite);\n  const favoriteIngredients = localFavorite.favoriteIngrediants;\n  let content = '';\n  if (favoriteIngredients.length === 0) {\n    document.querySelector('.not-found').innerText = \"You haven't added any favorite ingridients yet\"\n    return\n  }\n  favoriteIngredients.forEach(element => {\n    content += renderIngredients(element);\n  });\n\n  htmlEl.innerHTML = content;\n\n}\n\nconst init = () => {\n  const ingredientsEl = document.querySelector('.ingredients__js');\n\n  if (ingredientsEl) {\n    getRandomIngredients(ingredientsEl);\n\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', init)"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$e27edc6dc33d0133$exports","URL","resolve","import","meta","url","toString","$82fe4b22515a7139$var$BASE_URL","async","$82fe4b22515a7139$export$60fd80745d01af43","ingredientName","response","fetch","json","error","console","log","message","$7d037d87c507d84a$var$ingredientsModal","document","querySelector","$7d037d87c507d84a$var$closeIngredientsModalBtn","$7d037d87c507d84a$var$insertModalContainer","$7d037d87c507d84a$export$cb984957d16af54f","$7d037d87c507d84a$export$818ac2792da78ad5","classList","toggle","addEventListener","e","target","contains","elemName","parentNode","dataset","trim","foundedIngredient","data","filteredIngredientObj","ingredients","key","undefined","idIngredient","strABV","alcoVolume","strAlcohol","alcoPresence","strDescription","ingredientDescription","strIngredient","strType","ingredientType","markup","favoriteController","innerHTML","$7d037d87c507d84a$export$164bcedb8a6c483","$86410e3eb13ab2ec$var$getRandomIngredients","htmlEl","localFavorite","localStorage","getItem","favoriteIngredients","favoriteIngrediants","content","forEach","element","name","nameIngredient","typeIngredient","$parcel$interopDefault","$86410e3eb13ab2ec$var$renderIngredients","innerText","ingredientsEl"],"version":3,"file":"favorite-ingredients.5e96746b.js.map"}